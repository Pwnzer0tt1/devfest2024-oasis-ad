FROM registry.fedoraproject.org/fedora:latest

RUN echo -e "\n\n# Added during image build" >> /etc/dnf/dnf.conf && \
    echo -e "minrate=100\ntimeout=60\n" >> /etc/dnf/dnf.conf

RUN dnf -y makecache && \
    dnf -y update && \
    rpm --setcaps shadow-utils 2>/dev/null && \
    dnf install -y \
    iproute vim nano tcpdump iputils curl iptables podman docker-compose runc \
    python3-pip python3-virtualenv screen nc btop htop neovim iptables-nft \
    nano curl git wget unzip zip traceroute net-tools fuse-overlayfs rsync \
    openssh-server openssl ucpp python3-pyyaml python3-dotenv --exclude container-selinux &&\
    ln -s /usr/bin/ucpp /usr/local/bin/cpp && dnf clean all

RUN useradd oasis -G wheel,root && \
    echo -e "oasis:1:999\noasis:1001:64535" > /etc/subuid && \
    echo -e "oasis:1:999\noasis:1001:64535" > /etc/subgid

ADD /containers.conf /etc/containers/containers.conf
ADD /podman-containers.conf /home/oasis/.config/containers/containers.conf

RUN mkdir -p /home/oasis/.local/share/containers && \
    chown oasis:oasis -R /home/oasis && \
    chmod 644 /etc/containers/containers.conf

RUN sed -e 's|^#mount_program|mount_program|g' \
           -e '/additionalimage.*/a "/var/lib/shared",' \
           -e 's|^mountopt[[:space:]]*=.*$|mountopt = "nodev,fsync=0"|g' \
           /usr/share/containers/storage.conf \
           > /etc/containers/storage.conf


RUN printf '/run/secrets/etc-pki-entitlement:/run/secrets/etc-pki-entitlement\n/run/secrets/rhsm:/run/secrets/rhsm\n' > /etc/containers/mounts.conf
RUN sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config
RUN sed 's@session\s*required\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd

RUN mkdir -p /var/lib/shared/overlay-images \
             /var/lib/shared/overlay-layers \
             /var/lib/shared/vfs-images \
             /var/lib/shared/vfs-layers && \
    touch /var/lib/shared/overlay-images/images.lock && \
    touch /var/lib/shared/overlay-layers/layers.lock && \
    touch /var/lib/shared/vfs-images/images.lock && \
    touch /var/lib/shared/vfs-layers/layers.lock

ENV _CONTAINERS_USERNS_CONFIGURED="" \
    BUILDAH_ISOLATION=chroot \
    PODMAN_COMPOSE_WARNING_LOGS=false \
    LANG=C.UTF-8

RUN ln -s /usr/bin/podman /usr/bin/docker && \
    ln -sf /usr/share/zoneinfo/Europe/Rome /etc/localtime && \
    ln -sf /usr/sbin/iptables-nft /usr/sbin/iptables

# SSH
RUN mkdir /var/run/sshd

# Services
COPY ./services/ /root/
COPY ./entry.sh /sbin/init
RUN chmod +x /sbin/init

RUN mkdir -p /run /run/lock /tmp /var/lib/journal

# Run podman as oasis user
RUN mv /usr/bin/podman /usr/bin/_podman &&\
    printf '#!/usr/bin/env bash\nexec sudo -u oasis -- /usr/bin/_podman "$@"\n' > /usr/bin/podman &&\
    chmod +x /usr/bin/podman && chmod g+rw -R /root/

# Firegex requirements
RUN dnf -y update && dnf install -y python3-pip make cmake gcc-c++ git pcre2-devel libnetfilter_queue-devel \
    openssl-devel libnfnetlink-devel libmnl-devel libcap-devel boost-devel autoconf automake cargo \
    libffi-devel libtins-devel nftables python3-nftables libpcap-devel

RUN curl -fsSL https://bun.sh/install | bash
ENV PATH=$PATH:/root/.bun/bin
RUN git clone --single-branch --branch release https://github.com/jpcre2/jpcre2
RUN cd jpcre2; ./configure; make -j`nproc`; make install; cd ..; rm -rf jpcre2

CMD [ "/sbin/init", "prebuild" ]

